<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="InventoryModel.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <EntityType Name="Product">
          <Key>
            <PropertyRef Name="ProductId" />
          </Key>
          <Property Name="ProductId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="ProductName" Type="nchar" MaxLength="50" />
          <Property Name="ProductType" Type="nchar" MaxLength="30" />
          <Property Name="ProductManufacture" Type="nchar" MaxLength="30" />
        </EntityType>
        <EntityType Name="Stock">
          <Key>
            <PropertyRef Name="StockId" />
          </Key>
          <Property Name="StockId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
          <Property Name="ProductId" Type="int" />
          <Property Name="ProductQty" Type="int" />
          <Property Name="Productprice" Type="real" />
          <Property Name="StockDate" Type="date" />
        </EntityType>
        <Association Name="FK_Stock_Product">
          <End Role="Product" Type="Self.Product" Multiplicity="0..1" />
          <End Role="Stock" Type="Self.Stock" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Product">
              <PropertyRef Name="ProductId" />
            </Principal>
            <Dependent Role="Stock">
              <PropertyRef Name="ProductId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Function Name="AllJoin" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="colName" Type="nvarchar" Mode="In" />
          <Parameter Name="tableName" Type="nvarchar" Mode="In" />
          <Parameter Name="whereClause" Type="char" Mode="In" />
        </Function>
        <Function Name="AllOne" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="colName" Type="nvarchar" Mode="In" />
          <Parameter Name="tableName" Type="nvarchar" Mode="In" />
          <Parameter Name="whereClause" Type="char" Mode="In" />
        </Function>
        <Function Name="Demo_proc" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="whereClause" Type="char" Mode="In" />
        </Function>
        <Function Name="Demo_whe" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="var" Type="varchar" Mode="In" />
        </Function>
        <Function Name="Final_Query" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="ColumnName" Type="varchar" Mode="In" />
          <Parameter Name="var" Type="varchar" Mode="In" />
          <Parameter Name="data" Type="varchar" Mode="In" />
        </Function>
        <Function Name="Select_Table" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="tableName" Type="nvarchar" Mode="In" />
        </Function>
        <Function Name="SelectCol1" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="tableName" Type="nvarchar" Mode="In" />
        </Function>
        <Function Name="Where_Cond" Aggregate="false" BuiltIn="false" NiladicFunction="false" IsComposable="false" ParameterTypeSemantics="AllowImplicitConversion" Schema="dbo">
          <Parameter Name="ID" Type="varchar" Mode="In" />
        </Function>
        <EntityContainer Name="InventoryModelStoreContainer">
          <EntitySet Name="Product" EntityType="Self.Product" Schema="dbo" store:Type="Tables" />
          <EntitySet Name="Stock" EntityType="Self.Stock" Schema="dbo" store:Type="Tables" />
          <AssociationSet Name="FK_Stock_Product" Association="Self.FK_Stock_Product">
            <End Role="Product" EntitySet="Product" />
            <End Role="Stock" EntitySet="Stock" />
          </AssociationSet>
        </EntityContainer>
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema Namespace="InventoryModel" Alias="Self" annotation:UseStrongSpatialTypes="false" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm">
        <EntityType Name="Product">
          <Key>
            <PropertyRef Name="ProductId" />
          </Key>
          <Property Name="ProductId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="ProductName" Type="String" MaxLength="50" FixedLength="true" Unicode="true" />
          <Property Name="ProductType" Type="String" MaxLength="30" FixedLength="true" Unicode="true" />
          <Property Name="ProductManufacture" Type="String" MaxLength="30" FixedLength="true" Unicode="true" />
          <NavigationProperty Name="Stocks" Relationship="Self.FK_Stock_Product" FromRole="Product" ToRole="Stock" />
        </EntityType>
        <EntityType Name="Stock">
          <Key>
            <PropertyRef Name="StockId" />
          </Key>
          <Property Name="StockId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="ProductId" Type="Int32" />
          <Property Name="ProductQty" Type="Int32" />
          <Property Name="Productprice" Type="Single" />
          <Property Name="StockDate" Type="DateTime" Precision="0" />
          <NavigationProperty Name="Product" Relationship="Self.FK_Stock_Product" FromRole="Stock" ToRole="Product" />
        </EntityType>
        <Association Name="FK_Stock_Product">
          <End Role="Product" Type="Self.Product" Multiplicity="0..1" />
          <End Role="Stock" Type="Self.Stock" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Product">
              <PropertyRef Name="ProductId" />
            </Principal>
            <Dependent Role="Stock">
              <PropertyRef Name="ProductId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <EntityContainer Name="InventoryEntities" annotation:LazyLoadingEnabled="true">
          <EntitySet Name="Products" EntityType="Self.Product" />
          <EntitySet Name="Stocks" EntityType="Self.Stock" />
          <AssociationSet Name="FK_Stock_Product" Association="Self.FK_Stock_Product">
            <End Role="Product" EntitySet="Products" />
            <End Role="Stock" EntitySet="Stocks" />
          </AssociationSet>
          <FunctionImport Name="Select_Table" ReturnType="Collection(InventoryModel.Select_Table_Result)">
          <Parameter Name="tableName" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Select_Col">
            <Parameter Name="columnname" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Get_Col1" ReturnType="Collection(InventoryModel.Get_Col1_Result)">
          <Parameter Name="Column" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Get_Col" ReturnType="Collection(InventoryModel.Get_Col_Result)">
          <Parameter Name="columnname" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Fetch_Col" ReturnType="Collection(InventoryModel.Fetch_Col_Result)">
          <Parameter Name="Column" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Where_Cond" ReturnType="Collection(InventoryModel.Where_Cond_Result)">
          <Parameter Name="ID" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Fetch_Col1">
          <Parameter Name="Column" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Final_Query">
            <Parameter Name="ColumnName" Mode="In" Type="String" />
            <Parameter Name="var" Mode="In" Type="String" />
            <Parameter Name="data" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Demo_proc" ReturnType="Collection(InventoryModel.Demo_proc_Result)">
          <Parameter Name="whereClause" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="Demo_whe">
          <Parameter Name="var" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="SelectCol1" ReturnType="Collection(InventoryModel.SelectCol1_Result)">
          <Parameter Name="tableName" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="AllJoin">
            <Parameter Name="colName" Mode="In" Type="String" />
            <Parameter Name="tableName" Mode="In" Type="String" />
            <Parameter Name="whereClause" Mode="In" Type="String" />
          </FunctionImport>
          <FunctionImport Name="AllOne">
            <Parameter Name="colName" Mode="In" Type="String" />
            <Parameter Name="tableName" Mode="In" Type="String" />
            <Parameter Name="whereClause" Mode="In" Type="String" />
          </FunctionImport>
        </EntityContainer>
        <ComplexType Name="Select_Table_Result">
          <Property Type="String" Name="COLUMN_NAME" Nullable="true" MaxLength="128" />
          <Property Type="String" Name="DATA_TYPE" Nullable="true" MaxLength="128" />
        </ComplexType>
        <ComplexType Name="Get_Col_Result" />
        <ComplexType Name="Get_Col1_Result" />
        <ComplexType Name="Fetch_Col_Result" />
        <ComplexType Name="Where_Cond_Result">
          <Property Type="Int32" Name="StockId" Nullable="false" />
          <Property Type="Int32" Name="ProductId" Nullable="true" />
          <Property Type="Int32" Name="ProductQty" Nullable="true" />
          <Property Type="Single" Name="Productprice" Nullable="true" />
          <Property Type="DateTime" Name="StockDate" Nullable="true" />
        </ComplexType>
        <ComplexType Name="Demo_proc_Result" />
        <ComplexType Name="SelectCol1_Result">
          <Property Type="String" Name="TABLE_NAME" Nullable="false" MaxLength="128" />
          <Property Type="String" Name="COLUMN_NAME" Nullable="true" MaxLength="128" />
          <Property Type="String" Name="DATA_TYPE" Nullable="true" MaxLength="128" />
        </ComplexType>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
      <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
        <EntityContainerMapping StorageEntityContainer="InventoryModelStoreContainer" CdmEntityContainer="InventoryEntities">
          <EntitySetMapping Name="Products">
            <EntityTypeMapping TypeName="InventoryModel.Product">
              <MappingFragment StoreEntitySet="Product">
                <ScalarProperty Name="ProductId" ColumnName="ProductId" />
                <ScalarProperty Name="ProductName" ColumnName="ProductName" />
                <ScalarProperty Name="ProductType" ColumnName="ProductType" />
                <ScalarProperty Name="ProductManufacture" ColumnName="ProductManufacture" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Stocks">
            <EntityTypeMapping TypeName="InventoryModel.Stock">
              <MappingFragment StoreEntitySet="Stock">
                <ScalarProperty Name="StockId" ColumnName="StockId" />
                <ScalarProperty Name="ProductId" ColumnName="ProductId" />
                <ScalarProperty Name="ProductQty" ColumnName="ProductQty" />
                <ScalarProperty Name="Productprice" ColumnName="Productprice" />
                <ScalarProperty Name="StockDate" ColumnName="StockDate" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <FunctionImportMapping FunctionImportName="Select_Table" FunctionName="InventoryModel.Store.Select_Table">
            <ResultMapping>
              <ComplexTypeMapping TypeName="InventoryModel.Select_Table_Result">
                <ScalarProperty Name="COLUMN_NAME" ColumnName="COLUMN_NAME" />
                <ScalarProperty Name="DATA_TYPE" ColumnName="DATA_TYPE" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="Where_Cond" FunctionName="InventoryModel.Store.Where_Cond">
            <ResultMapping>
              <ComplexTypeMapping TypeName="InventoryModel.Where_Cond_Result">
                <ScalarProperty Name="StockId" ColumnName="StockId" />
                <ScalarProperty Name="ProductId" ColumnName="ProductId" />
                <ScalarProperty Name="ProductQty" ColumnName="ProductQty" />
                <ScalarProperty Name="Productprice" ColumnName="Productprice" />
                <ScalarProperty Name="StockDate" ColumnName="StockDate" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="Final_Query" FunctionName="InventoryModel.Store.Final_Query" />
          <FunctionImportMapping FunctionImportName="Demo_proc" FunctionName="InventoryModel.Store.Demo_proc" >
            <ResultMapping>
              <ComplexTypeMapping TypeName="InventoryModel.Demo_proc_Result" />
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="Demo_whe" FunctionName="InventoryModel.Store.Demo_whe" />
          <FunctionImportMapping FunctionImportName="SelectCol1" FunctionName="InventoryModel.Store.SelectCol1">
            <ResultMapping>
              <ComplexTypeMapping TypeName="InventoryModel.SelectCol1_Result">
                <ScalarProperty Name="TABLE_NAME" ColumnName="TABLE_NAME" />
                <ScalarProperty Name="COLUMN_NAME" ColumnName="COLUMN_NAME" />
                <ScalarProperty Name="DATA_TYPE" ColumnName="DATA_TYPE" />
              </ComplexTypeMapping>
            </ResultMapping>
          </FunctionImportMapping>
          <FunctionImportMapping FunctionImportName="AllJoin" FunctionName="InventoryModel.Store.AllJoin" />
          <FunctionImportMapping FunctionImportName="AllOne" FunctionName="InventoryModel.Store.AllOne" />
        </EntityContainerMapping>
      </Mapping>
    </edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </Connection>
    <Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="true" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="true" />
        <DesignerProperty Name="UseLegacyProvider" Value="false" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="None" />
      </DesignerInfoPropertySet>
    </Options>
    <!-- Diagram content (shape and connector positions) -->
    <Diagrams></Diagrams>
  </Designer>
</edmx:Edmx>